#-
#- Definition and usage of external components.
#- Compiler libraries has been used to test this feature: we no longer
#- use gcc driver to link our program but ld.
#-

# previous option generates a file to be cleaned up
m.in/clean += hello.map

# global CFLAGS
m.in/toolchain/gnu/cflags  := -m32 -O3 -Wall -Wextra -static

# global LDFLAGS
m.in/toolchain/gnu/ldflags := -melf_i386 --fatal-warnings

# component `crtbegin`: no interface; a set of object files.
# To be linked before any other program's object files.
$(eval $(call implement_abs, crtbegin,                                 \
                             $(call m.in/toolchain/gnu/locate,crt1.o)  \
                             $(call m.in/toolchain/gnu/locate,crti.o)))
$(eval $(call implement_abs, crtbegin,                                      \
                             $(call m.in/toolchain/gnu/locate,crtbeginT.o)))

$(eval $(call provide_abs, libc, $(m.in/toolchain/gnu/stdinc)))

# component `crtend`: no interface; a set of object files.
# To be linked last.
$(eval $(call implement_abs, crtend,                                       \
                             $(call m.in/toolchain/gnu/locate,libc.a)      \
                             $(call m.in/toolchain/gnu/locate,libgcc.a)    \
                             $(call m.in/toolchain/gnu/locate,libgcc_eh.a) \
                             $(call m.in/toolchain/gnu/locate,libc.a)      \
                             $(call m.in/toolchain/gnu/locate,crtend.o)    \
                             $(call m.in/toolchain/gnu/locate,crtn.o)))

m.in/toolchain/gnu/cflags += -nostdinc
m.in/toolchain/gnu/ldflags += -nostdlib

# not using implicit (i.e. extension-based %.elf) rule, but an explicit one
# with transaction-based controls and custom options.
$(eval $(call make,elf,hello,-static -Map=hello.map))

# require `libc`'s interface
$(eval $(call require,libc))

# require `printer`'s interface
$(eval $(call require,printer))

# link against component `crtbegin` (i.e. pull its implementation)
$(eval $(call link,crtbegin))

$(eval $(call add,src/main.c))

# link against a static libprinter
$(eval $(call add,lib/libprinter.a))

# link against component `crtend` (i.e. pull its implementation)
$(eval $(call link,crtend))

$(eval $(call include,src))

# implicit-based target
$(eval $(call make_implicit,hello.bin))
$(eval $(call prereq,hello))
